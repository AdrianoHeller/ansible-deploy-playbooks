---
- name: Update Server Dependencies
  hosts: all
  tasks:
    - name: Update Apt cache
      apt:
        update_cache: yes
        force_apt_get: yes
        cache_valid_time: 3600
---
- name: Download and Install Go
  hosts: all
  tasks:
    - name: Download Go 1.19 Stable
      get_url:
        url: https://go.dev/dl/go1.19.3.linux-amd64.tar.gz
        dest: /root/
---
- name: Install Go
  hosts: all
  tasks:
    - name: Install Go 1.19
      command: tar -C /usr/local -xzf go1.19.3.linux-amd64.tar.gz
    - name: Add Go to profile
      lineinfile:
        path: /etc/profile
        line: export PATH=$PATH:/usr/local/go/bin
    - name: Check Installation
      shell: go version
      register: response
    - debug:
        msg: '{{response.stdout_lines}}'
---
- name: Create Deployment User
  hosts: all
  tasks:
    - name: Create User
      user:
        name: deployer
        comment: deploy user
        group: admin
---
- name: Copy Artifacts to Server
  hosts: all
  tasks:
    - name: Extract and Copy Source Folder
      unarchive:
        src: '{{ src_files }}'
        dest: /root/
      when: '{{ is_compressed }}'
    - name: Copy Uncompressed Folder
      copy:
        src: '{{ src_files }}'
        dest: '{{ dest_files }}'
        remote_src: true
---
- name: Init Go Module
  hosts: all
  tasks:
    - name: Check Installation
      shell: 'go mod init {{ mod_name }}'
      register: response
    - debug:
        msg: '{{ response.stdout_lines }}'
---
- name: Install Dependencies
  hosts: all
  tasks:
    - name: Check Installation
      shell: go mod tidy
      register: response
    - debug:
        msg: '{{ response.stdout_lines }}'
---
- name: Compile App and Deploy
  become: True
  become_user: deployer
  hosts: all
  tasks:
    - name: Compile App
      shell: 'go build -o {{ mod_name }} main.go'
      register: response
    - debug:
        msg: '{{ response.stdout_lines }}'
    - name: Deploy App
      shell: './{{ mod_name }}'
      register: deploy
    - debug:
        msg: '{{ deploy.stdout_lines }}'
    - name: Check RUnning App
      shell: ps aux | grep go
      register: go-app
    - debug:
        msg: '{{ go-app.stdout_lines }}'

